input {
  http_poller {
    urls => {
      indicia => {
        method => get
        url => "{{ Warehouse URL }}/index.php/services/rest/reports/library/occurrences/list_occurrence_deletions.xml"
        headers => {
          Accept => "application/json"
          Authorization => "USER:{{ User }}:SECRET:{{ Secret }}"
        }
        query => {
          proj_id => "{{ Project ID }}"
          from_update_date => "1900-01-01"
          # This enables tracking of downloaded records on the server-side since the
          # http_poller input plugin has no logic for importing changes.
          autofeed => "t"
          # Uncomment the following line if your index excludes zero abundance records.
          # zeros => "1"
          max_time => 80
        }
      }
    }
    request_timeout => 120
    connect_timeout => 20
    socket_timeout => 100
    schedule => { cron => "*/2 * * * * UTC"}
    keepalive => false
    codec => "json"
  }
  # An http error or similar will not have a document ID, so create a uuid to
  # keep the document ID unique. Otherwise we only log 1 error event.
  if ![id] {
    uuid {
      target => "error_uuid"
    }
  }
}
output {
  if [id] {
    elasticsearch {
      hosts => ["{{ Elasticsearch address }}"]
      index => "occurrence_{{ Indicia warehouse unique name }}_index"
      # Our records need a unique ID in the index for updates.
      document_id => "{{ Indicia warehouse unique name }}|%{id}"
      action => "delete"
    }
    # Uncomment the following to see the normal events output to the terminal.
    # stdout { codec => json }
  }
  else {
    elasticsearch {
      hosts => ["{{ Elasticsearch address }}"]
      index => "occurrence_{{ Indicia warehouse unique name }}_errors"
    }
    # Uncomment the following to see the error events output to the terminal.
    # stdout { codec => json }
  }
}